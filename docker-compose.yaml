services:
  ui:
    build:
      dockerfile: ui/Dockerfile.ui
    working_dir: /app
    volumes:
      - ./ui/src:/app/src  # Mount your local repo dir to /app dir
      - ./ui/public:/app/public  # Mount your local repo dir to /app dir
    ports:
     - "3000:3000"
    environment:
      - WDS_SOCKET_HOST=localhost
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_SERVER_URL=http://localhost:8000
    # command: ["nginx", "-g", "daemon off;"]
    command: ["npm", "start"]
    depends_on:
      - apiserver
    networks:
      - local
  apiserver:
    build:
      dockerfile: api_server/Dockerfile.api
    volumes:
      - ./api_server/src:/app/api_server/src
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - PGUSER=admin
      - PGPASSWORD=password
      - PGDATABASE=phil
      - PYTHONPATH=/app/api_server/src
    depends_on:
      - db
    networks:
      - local
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: phil
    ports:
      - "5433:5433"
    volumes:
      - pgdata:/var/lib/postgresql/data 
    networks:
      - local
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d phil"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
#  ubuntu:
#    build:
#      dockerfile: Dockerfile.ubuntu
#    depends_on:
#      - db
#    environment:
#      - PGUSER=admin
##      - PGPASSWORD=password
#      - PGDATABASE=phil
#    working_dir: /app
#    command: ["sleep", "infinity"]
#    networks:
#      - local
    # command: ["/bin/bash", "source sqlAlchemy/bin/activate; python3 /app/create_database.py"]
volumes:
  pgdata:
networks:
  local:
    driver: bridge  # Using bridge network
